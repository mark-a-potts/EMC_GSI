#!/bin/sh

#---------------------------------------------------------------
# Set up environment for GDAS Ozone Monitor job
#
set -xa
echo `date` $0 `date -u` begin
export PS4='$SECONDS + '

export RUN_ENVIR=${RUN_ENVIR:-nco}
export envir=${envir:-test}

#------------------------------
# Specify NET and RUN name
#
export NET=${NET:-gfs}
export RUN=${RUN:-gdas}

#---------------------------------------------------------------
# obtain unique process id (pid) and make temp directories
#
export pid=$$
export outid=${outid:-"LL$job"}
export jobid=${jobid:-"${outid}.o${pid}"}

export DATAROOT=${DATAROOT:-/tmpnwprod2}
export DATA=${DATA:-${DATAROOT}/${jobid}}

export OZNMON_SUFFIX=${OZNMON_SUFFIX:-${NET}}
export COMROOT=${COMROOT:-/gpfs/hps/nco/ops/com}

#mkdir -p $DATA
#cd $DATA


#-------------------------------------
# File To Log Msgs
#
export jlogdir=${jlogdir:-${COMROOT}/logs/jlogfiles}
if [[ ! -d ${jlogdir} ]]; then
   mkdir -p ${jlogdir}
fi
export jlogfile=${jlogfile:-${jlogdir}/jlogfile.${job}.${pid}}

#-------------------------------------
# Determine Job Output Name on System
#
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile
export cycle=t${cyc}z

#----------------------------------------------
# SENDECF  - Flag Events on ECF
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# VERBOSE  - Specify Verbose Output in exglobal
#
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-NO}
export SENDECF=${SENDECF:-NO}
export VERBOSE=${VERBOSE:-YES}

#----------------------------------
# Set up the UTILITIES
#
export utilscript=${utilscript:-${UTILROOT}/ush}
export utilexec=${utilexec:-${UTILROOT}/exec}


#---------------------------------------------
# Specify Execution Areas
#
export HOMEgdas_ozn=${HOMEgdas_ozn:-${NWROOT}/gdas.$gdas_oznmon_ver}
export PARMgdas_ozn=${PARMgdas_ozn:-$HOMEgdas_ozn/parm}
export SCRgdas_ozn=${SCRgdas_ozn:-$HOMEgdas_ozn/scripts}
export FIXgdas_ozn=${FIXgdas_ozn:-$HOMEgdas_ozn/fix}

export HOMEoznmon=${HOMEoznmon:-${NWROOT}/global_shared.${shared_oznmon_ver}}
export EXECoznmon=${EXECoznmon:-$HOMEoznmon/exec}
export FIXoznmon=${FIXoznmon:-${HOMEoznmon}/fix}
export USHoznmon=${USHoznmon:-$HOMEoznmon/ush}


#-----------------------------------
# source the parm file
#
.  ${PARMgdas_ozn}/gdas_oznmon.parm


#--------------------------------------------
# Run setpdy and initialize PDY variables
#
#  Question:  is setpdy necessary?
#
if [[ $MY_MACHINE != "theia" ]]; then
   setpdy.sh
   . ./PDY
fi   

#---------------------------------------------
# COMOUT - WHERE GSI OUTPUT RESIDES
# OZN_TANKDIR - WHERE OUTPUT DATA WILL RESIDE
#
echo "pre-assignment, OZN_TANKDIR = $OZN_TANKDIR"
export OZN_TANKDIR=${OZN_TANKDIR:-${COMROOT}/${NET}/${envir}}
export TANKverf_ozn=${TANKverf_ozn:-${OZN_TANKDIR}/${RUN}.${PDY}/oznmon}
export TANKverf_oznM1=${TANKverf_oznM1:-${OZN_TANKDIR}/${RUN}.${PDYm1}/oznmon}
export COM_IN=${COM_IN:-${COMROOT}/${NET}/${envir}}
export COMIN=${COMIN:-${COM_IN}/${RUN}.${PDY}}

if [[ ! -d ${TANKverf_ozn} ]]; then
   mkdir -p -m 775 $TANKverf_ozn
fi
 
#---------------------------------------
#  set up validation file
#
if [[ $VALIDATE_DATA -eq 1 ]]; then
   export ozn_val_file=${ozn_val_file:-${FIXgdas_ozn}/gdas_oznmon_base.tar}
fi

#---------------------------------------
# Set necessary environment variables
#
export OZN_AREA=${OZN_AREA:-glb}

export oznstat=${oznstat:-$COMIN/gdas.t${cyc}z.oznstat}

msg="JOB HAS STARTED"
postmsg "$jlogfile" "$msg"

#-------------------------------------------------------
# Execute the script.
#
${OZNMONSH:-${SCRgdas_ozn}/exgdas_vrfyozn.sh.ecf} ${PDY} ${cyc}
iret=$?


echo "iret = $iret"

msg="JOB COMPLETED NORMALLY"
if [[ $iret  != 0 ]]; then
   msg="WARNING:  JOB DID NOT COMPLETE NORMALLY"
fi

postmsg "$jlogfile" "$msg"

date

