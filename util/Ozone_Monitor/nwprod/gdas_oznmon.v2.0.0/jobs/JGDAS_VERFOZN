#!/bin/sh
#############################################################
# Set up environment for GDAS Ozone Monitor job
#############################################################
set -xa
echo `date` $0 `date -u` begin
export PS4='$SECONDS + '

###############################
# Specify NET and RUN name
##############################
export NET=${NET:-gfs}
export RUN=${RUN:-gdas}

###########################################################
# obtain unique process id (pid) and make temp directories
###########################################################
export pid=$$
export outid=${outid:-"LL$job"}
export DATA=${DATA:-${DATAROOT}/${jobid:?}}

export OZNMON_SUFFIX=${OZNMON_SUFFIX:-${NET}}

mkdir -p $DATA
cd $DATA


####################################
# Determine Job Output Name on System
####################################
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile
export cycle=t${cyc}z


#----------------------------------
# Set up the UTILITIES
#
export utilscript=${utilscript:-${UTILROOT}/ush}
export utilexec=${utilexec:-${UTILROOT}/exec}


#---------------------------------------------
# Specify Execution Areas
#
export HOMEgdas_ozn=${HOMEgfs_ozn:-${NWROOT}/gfs.$gfs_ver}
export PARMgdas_ozn=${PARMgfs_ozn:-$HOMEgfs_ozn/parm/mon}
export SCRgdas_ozn=${SCRgfs_ozn:-$HOMEgfs_ozn/scripts}
export FIXgdas_ozn=${FIXgfs_ozn:-$HOMEgfs_ozn/fix/gdas}

export HOMEoznmon=${HOMEoznmon:-${HOMEgfs_ozn}}
export EXECoznmon=${EXECoznmon:-$HOMEoznmon/exec}
export FIXoznmon=${FIXoznmon:-${HOMEoznmon}/fix}
export USHoznmon=${USHoznmon:-$HOMEoznmon/ush}


#-----------------------------------
# source the parm file
#
.  ${PARMgdas_ozn}/gdas_oznmon.parm


#--------------------------------------------
# Run setpdy and initialize PDY variables
#
#  Question:  is setpdy necessary?
#
if [[ $MY_MACHINE != "theia" ]]; then
   setpdy.sh
   . ./PDY
fi   

#############################################
#  determine PDY and cyc for previous cycle
#############################################

cdate=`${NDATE} -6 ${PDY}${cyc}`
echo 'pdate = ${pdate}'

export P_PDY=`echo ${cdate} | cut -c1-8`
export p_cyc=`echo ${cdate} | cut -c9-10`

#---------------------------------------------
# COMOUT - WHERE GSI OUTPUT RESIDES
# OZN_TANKDIR - WHERE OUTPUT DATA WILL RESIDE
#
echo "pre-assignment, OZN_TANKDIR = $OZN_TANKDIR"
export TANKverf_ozn=${TANKverf_ozn:-${COMROOT}/${RUN}.${PDY}/${cyc}/oznmon}
export TANKverf_oznM1=${TANKverf_oznM1:-${COMROOT}/${RUN}.${P_PDY}/${p_cyc}/oznmon}
export COM_IN=${COM_IN:-${COMROOT}/${NET}/${envir}}
export COMIN=${COMIN:-${COM_IN}/${RUN}.${PDY}/${cyc}}

if [[ ! -d ${TANKverf_ozn} ]]; then
   mkdir -p -m 775 $TANKverf_ozn
fi
 
#---------------------------------------
#  set up validation file
#
if [[ $VALIDATE_DATA -eq 1 ]]; then
   export ozn_val_file=${ozn_val_file:-${FIXgdas_ozn}/gdas_oznmon_base.tar}
fi

#---------------------------------------
# Set necessary environment variables
#
export OZN_AREA=${OZN_AREA:-glb}

export oznstat=${oznstat:-$COMIN/gdas.t${cyc}z.oznstat}

msg="JOB HAS STARTED"
postmsg "$jlogfile" "$msg"

#-------------------------------------------------------
# Execute the script.
#
${OZNMONSH:-${SCRgdas_ozn}/exgdas_vrfyozn.sh.ecf} ${PDY} ${cyc}
iret=$?


echo "iret = $iret"

msg="JOB COMPLETED NORMALLY"
if [[ $iret  != 0 ]]; then
   msg="WARNING:  JOB DID NOT COMPLETE NORMALLY"
fi

postmsg "$jlogfile" "$msg"

################################
# Remove the Working Directory
################################
KEEPDATA=${KEEPDATA:-YES}
cd $DATAROOT
if [ ${KEEPDATA} = NO ] ; then
  rm -rf $DATA
fi

date

