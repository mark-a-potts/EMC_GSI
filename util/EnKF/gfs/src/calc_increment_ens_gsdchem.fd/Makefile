#==============================================================================
#
# Makefile
#
#==============================================================================

#-----------------------------------------------------------------------------
#                          -- Parent make (calls child make) --
#-----------------------------------------------------------------------------

# -------------
# General Rules
# -------------

SHELL=/bin/sh

RM     = /bin/rm -f
MKDIR  = /bin/mkdir -p

#------------
# Include machine dependent compile & load options
#------------

MAKE_CONF = Makefile.conf
include $(MAKE_CONF)

# -------------
# This makefile
# -------------

MAKE_FILE = Makefile

# -----------
# Load module
# -----------

EXE_FILE = calc_increment.x
PEXE_FILE = calc_increment_ens.x

# --------------------
# Installing directory
# --------------------

INSTALL_DIR = ../../exec/

# --------
# Log file
# --------

LOG_FILE = log.make.$(EXE_FILE)
PLOG_FILE = log.make.$(PEXE_FILE)

# ---------------
# Call child make
# ---------------

"" :
	@$(MAKE) -f $(MAKE_FILE) all

# ------------
# Make install
# ------------

install:
	@echo
	@echo '==== INSTALL ================================================='
	@if [ -e $(INSTALL_DIR) ]; then \
	  if [ ! -d $(INSTALL_DIR) ]; then \
	    echo '### Fail to create installing directory ###' ;\
	    echo '### Stop the installation               ###' ;\
	    exit ;\
	  fi ;\
	else \
	  echo "	mkdir -p $(INSTALL_DIR)" ;\
	  mkdir -p $(INSTALL_DIR) ;\
	fi
	cp $(EXE_FILE) $(INSTALL_DIR)
	cp $(PEXE_FILE) $(INSTALL_DIR)
	@cd $(INSTALL_DIR) ; ls -l `pwd`/$(EXE_FILE)
	@cd $(INSTALL_DIR) ; ls -l `pwd`/$(PEXE_FILE)

#-----------
# Make clean
# ----------

clean:
	@echo
	@echo '==== CLEAN ==================================================='
	- $(RM) *.o *.mod
	- $(RM) $(EXE_FILE) log.make.$(EXE_FILE)
	- $(RM) $(PEXE_FILE) log.make.$(PEXE_FILE)
	- $(RM) loadmap.txt

#-----------------------------------------------------------------------------
#                          -- Child make --
#-----------------------------------------------------------------------------

# ---------
# Libraries
# ---------

# ------------
# Source files
# ------------

SRCSF90 =                                          \
     kinds.f90                                     \
     constants.f90                                 \
     namelist_def.f90                              \
     variable_interface.f90                        \
     gfs_nems_interface.f90                        \
     fv3_interface.f90                             \
     calc_increment_interface.f90

SRCSF77 =

SRCS =  $(SRCSF77) $(SRCSF90)

# ------------
# Object files
# ------------

OBJS = ${SRCSF90:.f90=.o} ${SRCSF77:.f=.o}

# ------------
# Dependencies
# ------------
MAKE_DEPEND = Makefile.dependency
include $(MAKE_DEPEND)

# -----------------------
# Default compiling rules
# -----------------------

.SUFFIXES :
.SUFFIXES : .F90 .f90 .f .c .o

.f90.o  :
	@echo
	@echo '---> Compiling $<'
	$(CF) $(FFLAGS_N) -c $<

.f.o  :
	@echo
	@echo '---> Compiling $<'
	$(CF) $(FFLAGS_N) -c $<

# ------------------------
# Call compiler and linker
# ------------------------

all: CALC_INCREMENT CALC_INCREMENT_ENS

CALC_INCREMENT: $(OBJS)
	@echo
	@echo '---> Linking $@'
	$(LD) $(LDFLAGS_N) $(OBJS) main.f90 $(LIBS_N) -o $(EXE_FILE) > $(LOG_FILE)

CALC_INCREMENT_ENS: $(OBJS)
	@echo
	@echo '---> Linking $@'
	$(LD) $(LDFLAGS_N) $(OBJS) pmain.f90 $(LIBS_N) -o $(PEXE_FILE) > $(PLOG_FILE)

help:
	@ echo "Available targets:"
	@ echo "  make             creates executable"
	@ echo "  make install     creates exec & places it in bin"
	@ echo "  make clean       cleans objects, exec, and alien files"
