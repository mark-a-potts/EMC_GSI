# This config file contains the compile options for compilation
# of the GSI code on the NOAA HPCS.

# ------------------------------------
# Redefine variables for Cray on WCOSS
# ------------------------------------

# Set library versions
BACIO_VER = v2.0.1
BUFR_VER = v11.0.1
CRTM_VER = v2.2.3
NEMSIO_VER = v2.2.2
NETCDF_VER = 3.6.3
SFCIO_VER = v1.0.0
SIGIO_VER = v2.0.1
SP_VER = v2.0.2
W3EMC_VER = v2.2.0
W3NCO_VER = v2.0.6

CORELIB  = /lustre/f1/unswept/Jeffrey.S.Whitaker/fv3_reanl/ProdGSI
COMPILER = intel

NEMSIO_INC=$(CORELIB)/include
SFCIO_INC4=$(CORELIB)/include
SIGIO_INC4=$(CORELIB)/include
W3EMC_INCd=$(CORELIB)/include

BACIO_LIB4=$(CORELIB)/lib/libbacio_$(BACIO_VER).a
BUFR_LIBd=$(CORELIB)/lib/libbufr_$(BUFR_VER).a
NEMSIO_LIB=$(CORELIB)/lib/libnemsio_$(NEMSIO_VER).a
SFCIO_LIB4=$(CORELIB)/lib/libsfcio_$(SFCIO_VER).a
SIGIO_LIB4=$(CORELIB)/lib/libsigio_$(SIGIO_VER).a
SP_LIBd=$(CORELIB)/lib/libsp_$(SP_VER).a
W3EMC_LIBd=$(CORELIB)/lib/libw3emc_$(W3EMC_VER).a
W3NCO_LIBd=$(CORELIB)/lib/libw3nco_$(W3NCO_VER).a

NETCDFPATH = $(NETCDF_DIR)
NETCDF_INCLUDE = $(NETCDFPATH)/include
NETCDF_LDFLAGS_F = -L$(NETCDFPATH)/lib -lnetcdf



# Empty out definition of libs use by GMAO GSI building structure
LIBtransf = #-L$(CORELIB) -ltransf
LIBhermes = #-L$(CORELIB) -lhermes
LIBgfio   = #-L$(CORELIB) -lgfio
INChdf    = #-I$(BASEDIR)/$(ARCH)/include/hdf
LIBhdf    = #-L$(BASEDIR)/$(ARCH)/lib  -lmfhdf -ldf -lhdfjpeg -lhdfz -lsz


# ---------------------------
# General targets/definitions
# ---------------------------

  AR     = ar -rv

# ----------------------------
# Fortran compiler and options
# ----------------------------

  CF            = ftn
  FC            = $(CF)

#--- Normal mode options
  PROF= #-pg
  OMP = -openmp

  FFLAGS_F90    = -D_REAL8_ 

  FFLAGS_COM_N  = -I ./  -I $(SFCIO_INC4) -I $(SIGIO_INC4) \
  		-I $(NEMSIO_INC) -I $(NETCDF_INCLUDE) -I $(W3EMC_INCd) \
                -O3 -fp-model source -convert big_endian -assume byterecl \
                -implicitnone $(OMP)

  FFLAGS_COM_N_NOSWAP  = -I ./  -I $(SFCIO_INC4) -I $(SIGIO_INC4) \
  		       -I $(NEMSIO_INC) -I $(NETCDF_INCLUDE) -I $(W3EMC_INCd) \
                       -O3 -fp-model source -convert big_endian -assume byterecl \
                       -implicitnone $(OMP)

  FFLAGS_N  = $(FFLAGS_F90) $(FFLAGS_COM_N) $(PROF) 
  FFLAGS_NOSWAP_N  = $(FFLAGS_F90) $(FFLAGS_COM_N_NOSWAP) $(PROF) 
  FFLAGS_f  = $(FFLAGS_COM_N) $(PROF) 
  FFLAGS    = $(FFLAGS_N) $(PROF) 


#--- Debug mode options
  FFLAGS_COM_D  =  -I ./  -I $(SFCIO_INC4) -I $(SIGIO_INC4) \
  		-I $(NEMSIO_INC) -I $(NETCDF_INCLUDE) -I $(W3EMC_INCd) \
  		-O0 -fp-model source -convert big_endian -assume byterecl \
		-implicitnone -g -traceback -debug \
                -ftrapuv -check all  -fp-stack-check  -fstack-protector -warn
  FFLAGS_COM_NOSWAP_D  =  -I ./  -I $(SFCIO_INC4) -I $(SIGIO_INC4) \
  		       -I $(NEMSIO_INC) -I $(NETCDF_INCLUDE) -I $(W3EMC_INCd) \
  		       -O0 -fp-model source -convert big_endian -assume byterecl \
		       -implicitnone -g -traceback -debug \
                       -ftrapuv -check all  -fp-stack-check  -fstack-protector -warn
  FFLAGS_D  = $(FFLAGS_F90) $(FFLAGS_COM_D)
  FFLAGS_NOSWAP_D = $(FFLAGS_F90) $(FFLAGS_COM_NOSWAP_D)



# ----------------------
# C Compiler and options
# ----------------------

  CC            = cc

#--- Normal mode options

  CFLAGS_N      = -DLINUX -Dfunder -I ./ -DFortranByte=char -DFortranInt=int -DFortranLlong='long long' -O3 $(OMP)

#--- Debug mode options

  CFLAGS_D      = -DLINUX -Dfunder -I ./ -DFortranByte=char -DFortranInt=int -DFortranLlong='long long' -g


# ------------------
# Linker and options
# ------------------

  LD            = $(CF)

#--- Normal mode options

  LIBS_N        = $(SP_LIBd) $(NEMSIO_LIB) $(BACIO_LIB4) $(SIGIO_LIB4) \
  		$(SFCIO_LIB4) $(BUFR_LIBd) $(W3NCO_LIBd) $(W3EMC_LIBd) \
  		$(NETCDF_LDFLAGS_F)
#               -L../lib/GSD/gsdcloud4nmmb -lgsdcloud

  LDFLAGS_N     = -mkl -Wl,-Map,loadmap.txt $(OMP)

  LDFLAGS       = $(LDFLAGS_N)

#--- Debug mode options

  LIBS_D        = $(LIBS_N)

  LDFLAGS_D     = -mkl -Wl,-Map,loadmap.txt

#--- Empty out mpi library definition: embedded in compiler

  LIBmpi	= 
