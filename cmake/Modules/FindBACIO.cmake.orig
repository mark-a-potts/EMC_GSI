# This module looks for environment variables detailing where BACIO lib is
# If variables are not set, BACIO will be built from external source 
include(ExternalProject)
if((NOT BUILD_BACIO ) AND (DEFINED ENV{BACIO_LIB4}))
    set(BACIO_LIBRARY $ENV{BACIO_LIB4} )
<<<<<<< HEAD
  else()
    find_library( BACIO_LIBRARY 
      NAMES libbacio.a libbacio_4.a libbacio_v${BACIO_VER}_4.a 
      HINTS $ENV{COREPATH}/lib /usr/local/jcsda/nwprod_gdas_2014/lib	
          ${COREPATH}/bacio/v${BACIO_VER}
          ${COREPATH}/bacio/v${BACIO_VER}/intel
          ${COREPATH}/bacio/v${BACIO_VER}/ips/${COMPILER_VERSION}
      PATH_SUFFIXES
        lib
       ${NO_DEFAULT_PATH}
      )
    message("Found BACIO library ${BACIO_LIBRARY}")
  endif()
  set( bacio ${BACIO_LIBRARY})
endif()
if( NOT BACIO_LIBRARY ) # didn't find the library, so build it from source
    message("Could not find BACIO library, so building from libsrc")
    if( DEFINED ENV{BACIO_SRC} )
      set( BACIO_DIR $ENV{BACIO_SRC} CACHE STRING "BACIO Source Directory" )
=======
    if( CORE_LIBRARIES )
      list( APPEND CORE_LIBRARIES ${BACIO_LIBRARY} )
>>>>>>> debug-fix
    else()
      set( CORE_LIBRARIES ${BACIO_LIBRARY} )
    endif()
else()
  set(CMAKE_INSTALL_PREFIX ${PROJECT_BINARY_DIR})
  ExternalProject_Add(NCEPLIBS-bacio 
    PREFIX ${PROJECT_BINARY_DIR}/NCEPLIBS-bacio
    CMAKE_ARGS
      -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
      -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
      -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
      -DCMAKE_Fortran_COMPILER=${CMAKE_Fortran_COMPILER}
    SOURCE_DIR ${PROJECT_SOURCE_DIR}/libsrc/bacio 
    INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
    BUILD_COMMAND make
    INSTALL_COMMAND make install
  )
  execute_process(COMMAND grep "set(VERSION" CMakeLists.txt WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/libsrc/bacio OUTPUT_VARIABLE LIBVERSION)
  string(REPLACE "set(VERSION " "" LIBVERSION ${LIBVERSION})
  string(REPLACE ")" "" LIBVERSION ${LIBVERSION})
  string(REPLACE "\n" "" LIBVERSION ${LIBVERSION})
  message("bacio version is ${LIBVERSION}")
  set( BACIO_LIBRARY ${PROJECT_BINARY_DIR}/lib/libbacio_${LIBVERSION}_4.a )
  if( CORE_BUILT )
      list( APPEND CORE_BUILT ${BACIO_LIBRARY} )
      list( APPEND EXT_BUILT NCEPLIBS-bacio )
  else()
      set( CORE_BUILT ${BACIO_LIBRARY} )
      set( EXT_BUILT NCEPLIBS-bacio )
  endif()
endif( )

set( BACIO_LIBRARY_PATH ${BACIO_LIBRARY} CACHE STRING "BACIO Library Location" )

