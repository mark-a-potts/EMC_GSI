#!/bin/bash
# Purpose: 
#   Script to compute GRIBEXTREMES between GFS & ECMWF GRIB files over the globe
#  ...  plot height and wind              
#      1) gfs_guess;    # forecast     (guess)
#      2) gfs_anal;     # current anl  (curnt)
#      3) ecm_anal;     # reference anl(ref)
#      4) ecm_anal -  gfs_anal;   # ref - curnt
#      5) gfs_anal - gfs_guess    # curnt - guess
# History: 
#   APRIL 2011, V. Krishna Kumar NCEP/NCO/SIB - First implementation of this new script.
#   10/10/2013, V. Krishna Kumar NOAA/NESDIS/JCSDA Modified this script for WCOSS
#   10/18/2013, V. Krishna Kumar NOAA/NESDIS/JCSDA Modified this script for S4
#   07/08/2014, D.Xu / RTI@JCSDA, Modified the original script significantly to 
#     facilitate the process so
#       - Integrated two packages: (gfs anl vs. ecmwf anl && gfs exp vs. gfs ctl)
#       - Multiple grads sessions can run simutaneously.
#       - Removed redundant processes that are done in parent script.
#       - Removed unused variables 
#       - Reorganized structure and added comments to facilitate process.
# How to run: 
#    $ temp.setup 2012082600 925   b     06   grdprs   -63    44   7
#                 cycle      pres batch  no   var      lat    lon  order#
#                 date       lev  mode   use  suffix    
# 
echo ""
echo "---------------------------------"
echo "temp.setup starts"
echo "---------------------------------"
echo ""
set -ax
date
 
 
#================================
# 1. Get command parameters
#================================
time=${1:-"2007102112"}
level=${2:-"1000"}
mode=${3:-"b"}
# parameter 4 is no use.
var=${5:-"grdprs"}
lat=$6
lon=$7
orderNo=$8

#=====================
# 2. Define filenames
#=====================
#
# grads batch file 
#
grads_batch_file=mapset_${uniq_ID}.gs
#
# GRIB control file
#
gfs_ges_ctl_file=gfs_ges_${uniq_ID}.ctl
crnt_anl_ctl_file=crnt_anl_${uniq_ID}.ctl
ref_anl_ctl_file=ref_anl_${uniq_ID}.ctl
#
# Output grads and postscript files
#
grads_plot_file=out_${uniq_ID}.gr
ps_plot_file=out_${uniq_ID}.ps

 
#==========================
# 3. Define plot boundary
#==========================
#
dist_lat=10
dist_lon=15
lat1=`expr $lat \- $dist_lat`
lat2=`expr $lat \+ $dist_lat`
lon1=`expr $lon \- $dist_lon`
lon2=`expr $lon \+ $dist_lon`
PROJ=latlon
sc5=1
cbc=6
cbt=8

if [ $lat -ge 75 ]
then
  lat2=90
  PROJ=nps
  sc5=8
  lon1=-180
  lon2=180
fi

if [ $lat -le -75 ]
then
  lat1=-90
  PROJ=sps
  sc5=8
  lon1=-180
  lon2=180
fi

 
#============================
# 4. Generate grads script 
#============================
#
cat << EOF > ${grads_batch_file}
'open ${gfs_ges_ctl_file} '
'open ${crnt_anl_ctl_file} '
'open ${ref_anl_ctl_file} '
*
'set display color white'
'clear'
'q file 1'
'q file 2'
'q file 3'
*
* File containing all the plots
'enable print ${grads_plot_file}'
*
'set grads off'
'set lev $level'
'set mproj $PROJ'
'set map 15 1 $cbt'
'set lat $lat1 $lat2'
'set lon $lon1  $lon2'
*
'run ${gslib_dir}/rgbset.gs'
*
* * * * * * * * * * * * * 
* a) plot gfs guess
* * * * * * * * * * * * * 
'set grads off'
'set gxout contour'
'set cthick $cbc'
'd tmpprs.1'
'draw title ${title1} ${time} TMP ${level}mb ' 
'set gxout barb'
'print'
'printim ${png_file_1} png x800 y600'
'c'
* * * * * * * * * * * * * *
* b) plot current analysis
* * * * * * * * * * * * * *
'set grads off'
'set gxout contour'
'set cthick $cbc'
'd tmpprs.2'
'draw title ${title2} ${time} TMP ${level}mb ' 
'set gxout barb'
'print'
'printim ${png_file_2} png x800 y600'
'c'
* * * * * * * * * * * * * * * * 
* c) plot reference analysis
* * * * * * * * * * * * * * * * 
'set grads off'
'set gxout contour'
'set cthick $cbc'
'd tmpprs.3'
'draw title ${title3} ${time} TMP ${level}mb '
'set gxout barb'
'print'
'printim ${png_file_3} png x800 y600'
'c'
* * * * * * * * * * * * * * * * * * * * * * 
* d) plot diff of ( ref anl - current anl )
* * * * * * * * * * * * * * * * * * * * * * 
'set gxout contour'
'set grads off'
'set ccolor 1'
'set cthick $cbc'
'd tmpprs.3 - tmpprs.2 '
*
'set gxout barb'
'set clevs 0   5  10  20  30  40 50 '
'set ccols  0  43  1   1  26  27 28 29'
*
'draw title ${title3} - ${title2} ${time} TMP diff ${level}mb'
*
'print'
'printim ${png_file_4} png x800 y600'
'c'
* * * * * * * * * * * * * * * * * * * * * * * * 
* e) plot diff of ( current anl - gfs guess )
* * * * * * * * * * * * * * * * * * * * * * * * 
'set gxout contour'
'set grads off'
'set ccolor 1'
'set cthick $cbc'
'd tmpprs.2 - tmpprs.1 '
*
'set gxout barb'
'set clevs 0   5  10  20  30  40 50 '
'set ccols  0  43  1   1  26  27 28 29'
*
'draw title ${title2} - ${title1} ${time} TMP diff ${level}mb'
*
'print'
'printim ${png_file_5} png x800 y600'
*close metadata file
'disable print ${grads_plot_file}'
'set grads off'
'quit'
* 
* 
*
EOF
# End of grads batch script generation
 
 
#===========================
# 5. Create GRIB ctl file
#===========================
$grib2ctl_dir/grib2ctl.pl -verf $working_dir/$gfs_ges_input_file >  ${gfs_ges_ctl_file}
$gribmap_dir/gribmap -i  ${gfs_ges_ctl_file}
#
$grib2ctl_dir/grib2ctl.pl -verf $working_dir/$crnt_anl_input_file  > ${crnt_anl_ctl_file}
$gribmap_dir/gribmap -0 -i ${crnt_anl_ctl_file}
#
$grib2ctl_dir/grib2ctl.pl -verf $working_dir/$ref_anl_input_file  > ${ref_anl_ctl_file}
$gribmap_dir/gribmap -0 -i ${ref_anl_ctl_file}

#====================================
# 6. Run grads script in batch mode
#====================================
if [ "$mode" = "b" ]
then
  $grads_dir/grads -lbc "run ${grads_batch_file} "
else
  $grads_dir/grads -lc "run ${grads_batch_file} "
fi

# Convert metadata into postscript for display
$gxps_dir/gxps  -c -i ${grads_plot_file} -o ${ps_plot_file}
ls -l ${ps_plot_file}

echo ""
echo "================================="
echo "temp.setup ends"
echo "================================="
echo ""
echo ""
echo ""
echo ""
