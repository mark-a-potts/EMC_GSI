module Test_setupps_mod
   use adjtest
   use pfunit_mod
   implicit none

   public :: Test_setupps

@TestCase
   type, extends(TestCase) :: Test_setupps
   contains
      procedure :: setUp     ! overides generic
      procedure :: tearDown  ! overrides generic
   end type Test_setupps

contains

   ! No need to annotate setUp() when _extending_ TestCase
   subroutine setUp(this)

      class (Test_setupps), intent(inout) :: this


   end subroutine setUp

   ! No need to annotate tearDown() _extending_ TestCase
   subroutine tearDown(this)
      class (Test_setupps), intent(inout) :: this
   end subroutine tearDown

@Test
   subroutine testSetupps(this)
      use gsimod, only: gsimain_initialize
      use kinds, only: i_kind,r_kind
      use mpeu_util, only: die
      use obsmod, only: obs_setup
      use mpimod, only: mpi_comm_world,ierror
      use gridmod, only: create_grid_vars
      use observermod, only: observer_init,ndata
      use setupcldch_mod, only: setupcldch_class
      use m_rhs, only: bwork  => rhs_bwork
      use m_rhs, only: awork  => rhs_awork
 
      class (Test_setupps), intent(inout) :: this
      integer(i_kind) :: mype
      type(setupcldch_class) :: cldch
      logical conv_diagsave
      integer(i_kind) lunin,nobs,nele,is,i_cldch


      conv_diagsave = .false.
      write(6,*) "HEY, calling initialize"
      call gsimain_initialize
      write(6,*) ' done with initialize'      
      call mpi_comm_rank(mpi_comm_world,mype,ierror)
! Allocate grid arrays.
      call create_grid_vars

! Get date, grid, and other information from model guess files
      call gesinfo(mype)
      call observer_init()
      obs_setup = 'dir.0000/obs_setup'
      call setuprhsall(ndata,mype,.true.,.true.)

      cldch = setupcldch_class('setupcldch','var::ps','var::z','var::cldch')
      write(6,*) 'HEY! done with instantiation of cldch'
      call cldch%setup(lunin,mype,bwork,awork(1,i_cldch),nele,nobs,is,conv_diagsave)
      write(6,*) 'HEY! done with setup of cldch'
      @assertEqual(1, 1)
!     @assertEqual(3, ifilesfc(1))
!     @assertEqual(2.0, hrdifsfc(1))

   end subroutine testSetupps

end module Test_setupps_mod
