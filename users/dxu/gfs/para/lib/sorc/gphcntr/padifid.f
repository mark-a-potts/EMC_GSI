       SUBROUTINE PADIFID(CIFID,CIFIDEXT)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                                       .
C SUBPROGRAM:    PADIFID     TO PAD CNTR,S IFID DATA TO EXTENDED 6-BIT
C   PRGMMR: KRISHNA KUMAR      ORG: W/NP12     DATE: 1999-07-01
C
C ABSTRACT: TO PAD THE "IFID" DATA ZONE OF NMC 6-BIT PACKED RLE FORMAT
C   FROM 6-BIT PACKED FORMAT TO EXTENDED-TO-8-BITS FORMAT; 
C   TO PAD EACH CONSECUTIVE 6-BITS OF DATA WITH THE INSERTION OF 2 ZERO 
c   BITS SO THAT THE RESULTING BYTE WILL BE (00XXXXXX) BINARY;
C   TO STRETCH THE IFID TEXT SO THAT WHEN PAK6666() IS APPLIED TO THE
C   EXTENDED TEXT LATER, IT WILL BE RESTORED TO THE ORIGINAL DESIRED 
C   TEXT.
C
C PROGRAM HISTORY LOG:
C   YY-MM-DD  ORIGINAL AUTHOR(S)'S NAME: DAVID SHIMOMURA
C   93-02-17  SHIMOMURA        LAST MOD TO INTERGRAPH VERSION
C   96-04-29  SHIMOMURA     -- CONVERT FROM INTERGRAPH TO CRAY
C 1999-07-01  KRISHNA KUMAR -- CONVERTED THIS CODE FROM CRAY
C                              TO IBM RS/6000
C
C USAGE:    CALL PADIFID(CIFID,CIFIDEXT)
C   INPUT ARGUMENT LIST:
C     C*1 CIFID(48) - THE "IFID" TEXT INCLUDING THE HEX'FFFFFF'
C                       START OF MAP FLAG.
C
C   OUTPUT ARGUMENT LIST:
C     C*1 CIFIDEXT(64) - THE PADDED "IFID" INFO.
C
C REMARKS:
C   CAUTION: THE DIMENSION OF THE CHARACTER ARRAY ARGUMENTS MUST BE:
C              THE GIVEN CHARACTER*1 CIFID(48)
C              THE RESULTING PADDED CHARACTER*1 CIFIDEXT(64)
C 
C   THE MODS FOR THE CRAY VERSION PRIMARILY DEALT WITH CHANGING LOGIC
C   FROM LOW-ENDIAN INTERGRAPH TO HI-ENDIAN CRAY.
C
C ATTRIBUTES:
C   LANGUAGE: F90
C   MACHINE:  IBM
C
C$$$
C
C
       CHARACTER*1  CIFID(48)
       CHARACTER*1  CIFIDEXT(64)
C
       INTEGER      IACC
       CHARACTER*1  CACC(8)
       EQUIVALENCE (IACC,CACC(1))
C
       LOGICAL       LCHECKOUTQ    
       CHARACTER*1   NULL
C
       INTEGER       MASK1
       INTEGER       MASK2
       DATA          MASK1 /Z'FC00000000000000'/
       DATA          MASK2 /Z'03FFFFFFFFFFFFFF'/
  
C
       NULL = CHAR(0)
       LOUT_PTR = 0

C
       DO  I = 1,64
         CIFIDEXT(I) = NULL
       ENDDO
C
       DO  IN = 1,48,3
         IACC = 0
         CACC(1) = CIFID(IN)
         CACC(2) = CIFID(IN+1)
         CACC(3) = CIFID(IN+2)
C
         DO  IOU = 1,4
           CACC(8) = NULL   		!... ZERO LOW-ORDER 8 BITS
C/?        IACC = ISHFTC(IACC,6,64)     !... RQL 6BITS INTO LOW-ORDER
	   ITEMP = ISHFT(IAND(IACC,MASK1),-58) !ITEMP HAS 6BITS INTO LOW-ORDER
           IACC  = ISHFT(IAND(IACC,MASK2),6)   !IACC HAS 58 BITS TO THE LEFT
           IACC  = IOR(IACC,ITEMP)
           LOUT_PTR = LOUT_PTR + 1
           CIFIDEXT(LOUT_PTR) = CACC(8)
         ENDDO
C
       ENDDO
C
       RETURN
       END
