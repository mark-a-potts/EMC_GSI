       SUBROUTINE WRBORZ(IBLANQ,IDOT,JDOT,ITPLAN,IMAXWRDS,JMAXROWS)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                                       .
C SUBPROGRAM:    WRBORZ      TO SET OR CLEAR ONE BIT IN A BITPLANE
C   PRGMMR: KRISHNA KUMAR      ORG: W/NP12    DATE: 1999-07-01
C
C ABSTRACT: TO SET OR CLEAR ONE BIT-POSITION WITHIN A BLACK-AND-WHITE
C   RASTER IMAGE BITPLANE.  (THIS IS A STRIPPED-DOWN VERSION.)
C
C PROGRAM HISTORY LOG:
C   81-10-23  D.SHIMOMURA    -- WROTE ORIGINAL
C   95-03-13  D.SHIMOMURA    -- CONVERT VAX VERSION TO THE CRAY
C   95-07-19  LUKE LIN       -- ADD EXCLUSIVE-OR ONE BIT IN A BITPLANE.
C 1999-07-01  KRISHNA KUMAR  -- CONVERT CRAY VERSION TO THE IBM RS/6000
C
C USAGE:    CALL WRBORZ(IBLANQ,IDOT,JDOT,ITPLAN,IMAXWRDS,JMAXROWS)
C   INPUT ARGUMENT LIST:
C     (1) IBLANQ - INTEGER SWITCH TO EITHER SET OR CLEAR A BIT
C                  = 0;    TO PUT A ONE BIT INTO BIT PLANE;
C                  > 0;    TO CLEAR A BIT POSITION BY WRITING
C                             A ZERO AT THE SPECIFIED BIT POSITION
C                  < 0;    TO EXCLUSIVE-OR A BIT POSITION
C     (2) IDOT    - X-COORDINATE OF THE DESIRED PIXEL WITHIN A SCANLINE
C     (3) JDOT    - Y-COORDINATE OF THE DESIRED PIXEL
C                               (THE J-TH SCANLINE)
C
C     (4),(5),(6) ITPLAN(IMAXWRDS,JMAXROWS) - THE INTEGER BITPLANE
C
C
C REMARKS:
C     THIS NON-VERBOSE VERSION OF WRBORZ() DOES NOT PERFORM
C     BOUNDS CHECKING ON THE GIVEN BIT_PLANE DIMENSIONS;
C     SO IF YOU GIVE ME BAD DIMENSIONS, THEN I MAY WRITE OUT-OF-
C     BOUNDS.  SEE WRBORZ_V() FOR SAFER, BUT SLOWER, VERSION.
C 
C     THIS NON-VERBOSE VERSION SETS NO RETURN STATUS CODES.
C     IF THE GIVEN POINT IS OUTSIDE THE GIVEN BOUNDS, I SHALL
C     RETURN WITHOUT DOING ANYTHING.
C
C ATTRIBUTES:
C   LANGUAGE: F90
C   MACHINE:  IBM
C
C$$$
C
C      *     *     *     *     *     *     *     *     *     *
C
       INTEGER    NBITSPWD
       PARAMETER (NBITSPWD=64)
C      . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
       INTEGER    IBLANQ
       INTEGER    IDOT,JDOT
       INTEGER    IDOTS
       INTEGER    ITPLAN(IMAXWRDS,JMAXROWS)
       INTEGER    IEXIT
C      . . . . . . . . . . . . . . . . . . .
       INTEGER    IACC
       INTEGER    IREL
       INTEGER    NTHBIT
       INTEGER    NTHWD
       INTEGER    IMAXPELS,JMAXPELS
C
C
C      . . .   S T A R T   . . .
C
       IEXIT = 0

       IMAXPELS = NBITSPWD * IMAXWRDS
C      ... NOW IMAXPELS IS THE MAX NO. OF PIXELS PER SCANLINE ... 
       JMAXPELS = JMAXROWS
C      ... NOW JMAXPELS IS MAX-NUMBER-OF-SCANLINES DIMENSION
C      ... OF THE WINDOW
C
C      . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
C
C      ... STEP 1.  TEST FOR BIT POSITION WITHIN BOUNDS
       IF((IDOT .LE. 0) .OR. (IDOT .GE. IMAXPELS)) THEN
         GO TO 999
       ELSE
         IDOTS = IMAXPELS - IDOT
       ENDIF

       IF((JDOT .LE. 0) .OR. (JDOT .GT. JMAXPELS)) THEN
         GO TO 999
       ENDIF

C      ... STEP 2.  CALCULATE WHICH NBITSPWD-BIT WORD 
C                   THIS DOT GOES INTO
       IREL = IDOTS - 1
       NTHWD = IREL / NBITSPWD
       NTHWD = NTHWD + 1
C
       IACC = ITPLAN(NTHWD,JDOT)

C      ... STEP 3.  WHICH BIT WITHIN THIS WORD DO I TURN ON ?
       NTHBIT = MOD(IREL,NBITSPWD)
C      ... BUT, THE CRAY BIT-SET COUNTS FROM LOW-ORDER BIT = 0;
C                                             HI-ORDER BIT = 63;
       IBIT = NBITSPWD - 1 - NTHBIT

       IF(IBLANQ .EQ. 0) THEN
C        ... WE WANT TO PUT A BIT HERE
         IACC = IBSET(IACC,IBIT)
       ELSE IF (IBLANQ .GT. 0) THEN
C        ... WE WANT TO CLEAR A BIT POSITION ...
         IACC = IBCLR(IACC,IBIT)
       ELSE IF (IBLANQ .LT. 0) THEN
C        ... WE WANT TO EXCLUSIVE-OR  A BIT POSITION ...
         IF (BTEST(IACC,IBIT)) THEN
            IACC = IBCLR(IACC,IBIT)
         ELSE
            IACC = IBSET(IACC,IBIT)
         ENDIF
       ENDIF
C
       ITPLAN(NTHWD,JDOT) = IACC
C
  999  CONTINUE
       RETURN
       END
