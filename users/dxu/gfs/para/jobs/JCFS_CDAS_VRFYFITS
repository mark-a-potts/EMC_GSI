#!/bin/ksh
set -xa
#
# Specify whether the run is production or development
#
export RUN_ENVIR=${RUN_ENVIR:-prod}
export DEV_ECF=${DEV_ECF:-YES}

#####################################################################################
# Run config file to get input parameters
# This config file should define the following variables
# DATA_IN: Location of working directory, default to /tmpnwprd
# DEV_ECF: If the job is to be running using SMS, default to YES
# SENDDBN: Set to NO for developers, default to YES
# COM_IN:  Directory for input files, default to /com/$NET/${envir}
# COM_OUT: Directory for output file, default to /com/$NET/${envir}
# gespath: Directory for the guess or restart files, default to /nwges/${envir}
# RESDIR:  Restart files directory
# GODAS_PARM_INPUT: GODAS INPUT parameters
# GETGES_PROD: Whether to get the restart files from the directory structure like production
#              Set to NO if your RESTART file is saved in COMROT directory
#####################################################################################
if [ "$RUN_ENVIR" != prod ]      ### For Developers, "group_name" is passed from the SMS script
then
  . ${PARA_CONFIG:-/climate/save/${LOGNAME}/CFSV2/parm/cdas_para_config}
  export userid=$LOGNAME
  export DATA_IN=${DATA_IN:-$PTMP/$userid}
fi

###############################################################
# This block can be modified for different test environment
# This is used for operational testings
###############################################################
if [[ $RUN_ENVIR = prod && $envir != prod ]]; then
  export SENDDBN=${SENDDBN:-NO}
  export jlogfile=${jlogfile:-/com/logs/${envir}/jlogfile}
fi

####################################
# Specify NET and RUN Name and model
####################################
export NET=cfs
export RUN=cdas1

####################################
# set up job name and  environment
####################################
export job=${job:-$RUN}
export envir=${envir:-prod}
export host=${host:-`hostname | cut -c1`}

###############################################

date
export PS4='$SECONDS + '

# #############################################
# SETUP FITS TO OBS PROCESSING VARIABLES
# ##############################################

####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=${pid:-$$}
export DATA_IN=${DATA_IN:-/tmpnwprd}

export DATA=$DATA_IN/${job}.${pid}
mkdir -p $DATA
cd $DATA


####################################
# Determine Job Output Name on System
####################################
export cyc=${cyc:-00}
export outid="LL$job"
[ $envir != prod ]  && export outid="LL${job}_${envir}"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile
export cycle=t${cyc}z

####################################
# SENDECF  - Flag Events on SMS
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# VERBOSE  - Specify Verbose Output in excfs_cdas_vrfyfits.sh.ecf
####################################
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export VERBOSE=${VERBOSE:-YES}

#################################
# Define the Log File directory
#################################
export jlogfile=/com/logs/jlogfiles/jlogfile.${job}.${pid}

##############################
# Set up the UTILITIES
##############################
export utilscript=${utilscript:-/nwprod/util/ush}
export utilexec=${utilexec:-/nwprod/util/exec}
export ushscript=${ushscript:-/nwprod/ush}
export utilparm=${utilparm:-/nwprod/util/parm}

# Run setup to initialize working directory and utility scripts
##############################
sh $utilscript/setup.sh

####################################
# Specify Execution Areas
####################################
export HOMEcfs=${HOMEcfs:-/nw${envir}/${NET}.${model_ver}}
export EXECcfs=${EXECcfs:-$HOMEcfs/exec}
export FIXcfs=${FIXcfs:-$HOMEcfs/fix/cfs_fix_cdas}
export USHcfs=${USHcfs:-$HOMEcfs/ush}
export PARMcfs=${PARMcfs:-$HOMEcfs/parm}

err_chk=${err_chk:-$utilscript/err_chk.sh}
startmsg=${startmsg:-$utilscript/startmsg.sh}
ERRSCRIPT=${ERRSCRIPT:-$err_chk}
LOGSCRIPT=${LOGSCRIPT:-$startmsg}

###############################################
# Define the config file
###############################################
if [[ $RUN_ENVIR = prod || $RUN_ENVIR = devpara ]] then
   export CDAS_CONFIG_FILE=${CDAS_CONFIG_FILE:-$PARMcfs/cfs_parm_am/cfs_cdas_config}
else
   export CDAS_CONFIG_FILE=${2:-${CDAS_CONFIG_FILE:-cfs_cdas_config}}
fi
[[ $(dirname $CDAS_CONFIG_FILE) = . ]]&&CDAS_CONFIG_FILE=$(pwd)/$CDAS_CONFIG_FILE
if [[ ! -r $CDAS_CONFIG_FILE ]];then
  echo $0: inaccessible configuration file $CONFIG_FILE >&2
  err_exit
fi
#####################################
# specify user and local directories if "dev" queue
#####################################
if [ $RUN_ENVIR != prod ] ; then
 export usergroup=${usergroup:-g01}
 export userid=${userid:-$LOGNAME}
 export userdir=${userdir:-public_release/cfs_v2}
fi

######################################
# Define the input/output directory - already done in CONFIG
######################################
export COM_IN=${COM_IN:-/com/${NET}/${envir}}
export COM_OUT=${COM_OUT:-/com/${NET}/${envir}}

export COMDIR=$COM_IN
##############################
# Run setpdy and initialize PDY variables
##############################
#export PDY=20121022

sh $utilscript/setpdy.sh
. ./PDY

export CDATE=${CDATE:-${PDY}$cyc}
##############################################
# Define COM directories
##############################################
export COMINIC=$COM_IN/cdas.$PDYm1
export COMIN=$COM_IN/cdas.$PDY
export COMOUT=$COM_OUT/cdas.$PDY
mkdir -m 775 -p $COMOUT

##############################################
# Define GES directories
##############################################
export gespath=${gespath:-/nwges/${envir}}
export GESdir=$gespath/cdas.${PDY}
mkdir -m 775 -p $GESdir

export RESDIR=${RESDIR:-$GESdir}
mkdir -p $RESDIR

env

#############################################################
# Specify script variables
#export PRVT=${PRVT:-${FIXcfs}/prepobs_errtable.global}

#############################################################
# execute the script

${VRFYFITSSH:-$HOMEcfs/scripts/excfs_cdas_vrfyfits.sh.ecf}

###################################################
# msg end of job and clean up temperary directory
###################################################
cat $pgmout
msg="ENDED NORMALLY."
$DATA/postmsg "$jlogfile" "$msg"

cd $DATA_IN
if [ ${RM_TMPDIR:-YES} = YES ] ; then rm -rf $DATA ; fi

date

if [[ $RUN_ENVIR = dev ]] ; then
   export CSTEP=vrfy
 if [ ! -z ${PEND:-""} ] ; then $PEND ; fi
fi
