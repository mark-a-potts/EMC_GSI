      SUBROUTINE AFOSTX(INTEXT,NCAR,IX,IY,IDX,IDY,ZT,FLAGS,IPRINT)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                                       .
C SUBPROGRAM:    AFOSTX      PUT TEXT OR TITLES ON AFOS GRAPHICS.
C   PRGMMR: KRISHNA KUMAR       ORG: W/NP12    DATE: 1999-07-01
C
C ABSTRACT: PUTS TEXT OR TITLES ON AFOS GRAPHICS PRODUCTS. THE TEXT
C   IN HOLLERTH IS PASSED IN INTEXT.  THE TEXT IS  LOADED INTO
C   LBLOCK USING THE BYTE COUNTER, ICNTOT. LBLOCK AND ICNTOT ARE
C   PASSED IN COMMON/ISPACE/.
C
C
C
C PROGRAM HISTORY LOG:
C   95-03-14  ORIGINAL AUTHOR HENRICHSEN.
C   95-11-13  CONVERT TO RUN ON THE CRAY.
C 1999-07-01  CONVERT TO RUN ON THE IBM RS/6000.
C
C USAGE:  CALL AFOSTX(INTEXT,NCAR,IX,IY,IDX,IDY,ZT,FLAGS,IPRINT)
C   INPUT ARGUMENT LIST:
C     INTEXT   - CHARACTER*1 ARRAY CONTAINING TEXT STRING.
C     NCAR     - NUMBER OF BYTES IN TEXT STRING.
C     IX,IY    - THE X AND Y LOCATION FOR TEXT ON AFOS IN DOTS.
C     IDX,IDY  - THE DELTA X AND Y OFF SET FOR TEXT IN DOTS.
C     ZT       - INTEGER VALUE FOR ZOOM THRESHOLD OF TEXT.
C              - MAY HAVE THE FOLLOWING VALUES:
C              - ZT = 0, DISPLAY AT ALL ZOOMS.
C              - ZT = 1, DISPLAY AT ZOOMS 4 AND ABOVE.
C              - ZT = 2, DISPLAY AT ZOOMS 9 AND ABOVE.
C              - ZT = 3, DISPLAY AT ZOOMS 16 AND ABOVE.
C     FLAGS    - INTEGER FLAGS WORD
C              - IF = 0 OR GE 3 USE STANDARD CHAR. SIZE.
C              - IF = 1,TURN ON REVERSE BLOCK FONT BIT.
C              - IF = 2,DOUBLE TEXT SIZE.
C              - IF = NEG, USE OFFSET MODE
C     IPRINT   - IF IPRINT = 1 PRINT IS TURNED ON.
C   INPUT VIA COMMON:
C     /ISPACE/ - LBLOCK,ICNTOT,LBNKFG
C              - IF LBNKFG = -1 LAST BYTE IN LBLOCK WAS A DUMMY
C              - TO KEEP KCNTOT ON HALF WORD BOUNDRY.
C
C   OUTPUT ARGUMENT LIST: NONE
C
C   OUTPUT VIA COMMON:
C     /ISPACE/ - LBLOCK,ICNTOT,LBNKFG
C
C   OUTPUT FILES:
C     FT06F001 - STANDARD PRINT FILE
C
C REMARKS: USES IBSET IBCLR
C   FLAG TO DENOTE IF BYTE COUNTER ICNTOT SHOULD BE DECREMENTED BY ONE
C   IS FOUND IN THE 7TH ARG OF COMMON/ISPACE/. IF LBNKFG = -1 THEN
C   ICNTOT = ICNTOT -1.
C
C ATTRIBUTES:
C   LANGUAGE: F90.
C   MACHINE:  IBM
C
C$$$
C
C
      COMMON  /ISPACE/LBLOCK,ICNTOT,LBNKFG,KBLOCK
C
      CHARACTER*1280   KBLOCK
C
C
      CHARACTER*1 ABLANK
      DATA        ABLANK       /' '/
      CHARACTER*1 INTEXT(NCAR)
      CHARACTER*1 LBLOCK(16384)
      CHARACTER*8 LC5
C
      INTEGER     FLAGS
      INTEGER     FONT
      INTEGER     IC5
      INTEGER     IC8
      DATA        IC8          /X'C840000000000000'/
      INTEGER     IMASK
      DATA        IMASK        /X'00000000000000FF'/
      INTEGER     MC5
      DATA        MC5          /X'C540000000000000'/
      INTEGER     ZT
C
      LOGICAL*1   LEVEN
      LOGICAL*1   LOFSET
      LOGICAL*1   LPRINT
C
      EQUIVALENCE   (IC5,LC5)
C
C        REINTIALIZE IC5
C
C       CHECK TO SEE IF OFFSET MODE IS DESIRED.........
C
      IF(FLAGS.LT.0)THEN
        LOFSET = .TRUE.
        MEND   = 8
        IC5 = IC8
C
C       LOAD DX AND DY COORDINATES.
C
        LC5(7:7) = CHAR(IAND(IDX,IMASK))
        LC5(8:8) = CHAR(IAND(IDY,IMASK))
      ELSE
        LOFSET = .FALSE.
        MEND   = 6
        IC5 = MC5
      ENDIF
C
C       LOAD X AND Y COORDINATES.
C
        IC5 = IOR(IC5,ISHFT(IX,32))
        IC5 = IOR(IC5,ISHFT(IY,16))
C
      IF(IPRINT.EQ.1)THEN
       LPRINT = .TRUE.
       IERR = 1
      ELSE
       LPRINT = .FALSE.
      ENDIF
C
C
C . . . TURN ON THE ZOOM THRESHOLD BITS AS REQUIRED.
C
              IF(ZT .EQ.1) THEN
                 IC5 = IBSET(IC5,51)
              ELSE IF(ZT .EQ.2) THEN
                 IC5 = IBSET(IC5,52)
              ELSE IF(ZT .EQ.3) THEN
                 IC5 = IBSET(IC5,51)
                 IC5 = IBSET(IC5,52)
              ELSE
              ENDIF
C
      IFONT  = FLAGS
      FONT = IABS(IFONT)
      IF(FONT.GT.2) FONT = 0
      LEVEN = .FALSE.
        IF(FONT.EQ.1) THEN
C
C        SET RESERVE BLOCK FLAG.
C
         IC5 = IBSET(IC5,53)
        ELSE IF(FONT.EQ.2) THEN
C
C       TURN ON DOUBLING BITS.
C
         IC5 = IBSET(IC5, 47)
         IC5 = IBSET(IC5, 46)
        ENDIF
C
C
C      CHECK TO SEE IF LBNKFG IS -1 IF .TRUE. SUBTRACT 1 FROM ICNTOT
C      AND SET LBNKFG = 0
C
        IF (LBNKFG.EQ.-1) THEN
           ICNTOT = ICNTOT - 1
           LBNKFG = 0
        ELSE
        ENDIF
           DO IK = 1,MEND
              ICNTOT = ICNTOT +1
             LBLOCK(ICNTOT) = LC5(IK:IK)
           ENDDO
          NCHAR = NCAR
           DO  KK = 1,NCHAR
             ICNTOT = ICNTOT + 1
             LBLOCK(ICNTOT) = INTEXT(KK)
           ENDDO
C
C
C . . . CHECK TO SEE IF NCHAR IS EVEN.....
C
      IREM = MOD(ICNTOT,2)
      IF(IREM.NE.0) THEN
C
C        THIS NOT AN EVEN NUMBER OF BYTES SO ADD A BLANK TO GET
C        ON HALF WORD BOUNDARY.
C
          ICNTOT = ICNTOT + 1
          LBLOCK(ICNTOT) = ABLANK
          LBNKFG = -1
      ENDIF
C
C . . . CACULATE NUMBER OF HALF WORDS....
C
      KCNTOT = ICNTOT/2
      IF(LPRINT)THEN
         WRITE(6,FMT='('' AFOSTX: BYTE COUNT='',I5,
     2   '' HALF WORD COUNT='',I5/)')ICNTOT,KCNTOT
      ENDIF
      CONTINUE
      RETURN
      END
