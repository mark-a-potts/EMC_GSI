      SUBROUTINE CLOSED(Z,IMAX,JMAX,S,A,B,M,JUP,IX,JY,
     X                  LPLMI,ITST,IFF)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                                       .
C SUBPROGRAM:    CLOSED      FINDS THE CENTER LOCATIONS FROM THE GIVEN 
C   PRGMMR: KRISHNA KUMAR          ORG: NP12    DATE:1999-07-01
C
C ABSTRACT: DOCUMENTATION WILL BE ADDED LATER.
C
C PROGRAM HISTORY LOG:
C   ??-??-??  DICK SCHURR
C   93-04-07  LILLY CONVERT SUBROUTINE TO FORTRAN 77
C   96-02-22  LIN   CONVERT TO CFT-77
C   96-07-22  LIN   TURN OFF THE PRINT STATEMENT
C 1999-06-01  KRISHNA KUMAR    ASSIGNED THE RIGHT VALUE FOR INDEF
C                              (FROM RANGE FUNCTION) FOR IBM
C                              RS/6000 SP USING COMPILE OPTION
C                              xlf -qintsize=8 -qrealsize=8
C                              AND CONVERTED THIS CODE FROM CRAY
C                              TO IBM RS/6000.
C
C USAGE:    CALL CLOSED( Z, IMAX, JMAX, S, A, B, M, JUP, IX, JY,
C                        LPLMI, ITST, IFF )
C   INPUT ARGUMENT LIST:
C     INARG1   - GENERIC DESCRIPTION, INCLUDING CONTENT, UNITS,
C     INARG2   - TYPE.  EXPLAIN FUNCTION IF CONTROL VARIABLE.
C
C   OUTPUT ARGUMENT LIST:      (INCLUDING WORK ARRAYS)
C     WRKARG   - GENERIC DESCRIPTION, ETC., AS ABOVE.
C     OUTARG1  - EXPLAIN COMPLETELY IF ERROR RETURN
C     ERRFLAG  - EVEN IF MANY LINES ARE NEEDED
C
C   INPUT FILES:   (DELETE IF NO INPUT FILES IN SUBPROGRAM)
C     DDNAME1  - GENERIC NAME & CONTENT
C
C   OUTPUT FILES:  (DELETE IF NO OUTPUT FILES IN SUBPROGRAM)
C     DDNAME2  - GENERIC NAME & CONTENT AS ABOVE
C     FT06F001 - INCLUDE IF ANY PRINTOUT
C
C REMARKS: LIST CAVEATS, OTHER HELPFUL HINTS OR INFORMATION
C
C ATTRIBUTES:
C   LANGUAGE: F90
C   MACHINE:  IBM
C
C$$$
C
C     ...PURPOSE...TO LABEL CONTOURS ABOVE A GIVEN CENTER POINT ALONG
C     ...        A FIXED I, INCREASING J VALUES, TO FIND ALL CONTOURS
C     ...       WITHIN JUP GRID INTERVALS OF THE GIVEN CENTER...
C     ...THIS SUBR IS CALLED BY SUBROUTINE CLOSEC WHICH LOCATES CENTER.
C
      COMMON   /PUTARG/PUTHGT,PUTANG,IPRPUT(2),ITAPUT
      COMMON /ADJ1/ICOR,JCOR
C
      DIMENSION Z(IMAX,JMAX)
      CHARACTER*8 IFF(5)
      DIMENSION ITEXT(3),JTEXT(3)
C
      CHARACTER*12 LTEXT
      CHARACTER*12 MTEXT
      CHARACTER*4  LPLMI
      CHARACTER*4  IDECP
      INTEGER      M(2)
      INTEGER      JPRPUT(2)
C
      REAL    INDEF,IDEF,KDEF1,KDEF2,KDEF3,KDEF4
C
      DATA ITEXT/3*0/
      DATA IDECP/'.   '/
C///  DATA INDEF/Z'7FFFFFFF'/
C///  DATA IMSK1/Z'FF000000'/
C///  DATA IMSK2/Z'FFFF0000'/
      DATA INDEF   /1.0E307 /
      DATA IMSK1/Z'FFFFFFFFFF000000'/
      DATA IMSK2/Z'FFFFFFFFFFFF0000'/
C
C///  EQUIVALENCE(LTEXT,ITEXT(1))
C///  EQUIVALENCE(MTEXT,JTEXT(1))
C
      KCON4=20
      KCON5=30
      ICLOSE=0
      IISFC=0
      IF(M(2).EQ.9) IISFC=1
 7    KBEG=JY
      KLIM=JY+JUP
      IJFIX=IX
      Q=S*20.
      REM=1.
      Q1=1./(2.*Q*Q)
      Q2=(Q+1.)/2.
      Q3=1./Q
      N=10
      KLAST=0
      KSTART=KBEG
      DO 16 K=KBEG,KLIM
      IDEF=Z(IJFIX,K)
      IF(IDEF.NE.INDEF) GO TO 17
      KSTART=KSTART+1
  16  CONTINUE
      GO TO 500
  17  L=Z(IJFIX,KSTART)+10000.
      KCON6=(FLOAT(IJFIX-1)*Q*3.0)+0.5
      ICAL1=KCON6+ICOR
C     ...THIS ICAL1 IS THE FIXED I VALUE IN DOTS...
      DO 200 K=KSTART,KLIM
      Q4=REM/2.
      Q5=1.-REM
      X=Q-Q5
      IINC=X
      REM=X-FLOAT(IINC)
      KCON7=(FLOAT(K-1)*Q*3.0)+0.5
C
C     CHECK FOR IMBEDDED GRID
C
      KDEF1=Z(IJFIX,K)
      KDEF2=Z(IJFIX,K+1)
      KDEF3=Z(IJFIX,K-1)
      KDEF4=Z(IJFIX,K+2)
      YD2=0
      IF((KDEF1.EQ.INDEF).OR.(KDEF2.EQ.INDEF).OR.(KDEF3.EQ.INDEF).OR.
     X(KDEF4.EQ.INDEF)) GO TO 31
      YD2=(Z(IJFIX,K+2)-Z(IJFIX,K+1)-Z(IJFIX,K)+Z(IJFIX,K-1))*Q1
  31  IF((KDEF1.EQ.INDEF).OR.(KDEF2.EQ.INDEF)) GO TO 200
      YD1=(Z(IJFIX,K+1)-Z(IJFIX,K))*Q3-(Q2*YD2)+Q5*YD2
      YVAL=Z(IJFIX,K)+Q5*Q4*YD1+10000.
      DO 130 KK=1,IINC
      MM=YVAL
      IF((MM - L) .EQ. 0) GO TO 125
C
C     COMPUTE A LABEL
C
      XVAL=MM-10000
      IF((IABS(MM)-IABS(L)).LT.0) XVAL=L-10000
      KCON1=(KK-1)*3
      ICAL = KCON7 + KCON1 + JCOR
C     ...THIS IS THE J - VALUE IN DOTS...
      HOLD = B * (XVAL + A)
      ITEXT(1) = SIGN((ABS(HOLD) + 0.05),HOLD)
      KPOSX=KCON4
      KAFOS=KCON5
      IF((ICAL-KLAST).LT.KPOSX) GO TO 125
      IF((ICAL-KLAST).LT.KAFOS) GO TO 150
C///
      JPRPUT(1)=IPRPUT(1)
      JPRPUT(2)=IPRPUT(2)
      ICLOSE=0
      GO TO 160
 150  CONTINUE
      IF(ICLOSE.EQ.0) GO TO 151
      GO TO 152
 151  CONTINUE
      JPRPUT(2)=1
      ICLOSE=1
      GO TO 160
 152  CONTINUE
C///  JPRPUT=IPRPUT
      JPRPUT(1)=IPRPUT(1)
      JPRPUT(2)=IPRPUT(2)
      ICLOSE=0
 160  CONTINUE
      KLAST=ICAL
      INTG=ITEXT(1)
      NCHAR=M(2)
      IF(IISFC.EQ.1) GO TO 121
      GO TO 123
C
C     FORMAT PRECIP STRIP LABELS-SPECIAL CASE
C
 121  CONTINUE
      NCHAR=3
C*    CALL BIN2EB(INTG,JTEXT,NCHAR,LPLMI)
      CALL BIN2EB(INTG,MTEXT,NCHAR,LPLMI)
C     PRINT *,' CLOSED: INTG=',INTG,' NCH=',NCHAR,' MTEXT=',MTEXT
      CALL GBYTES(MTEXT,JTEXT,0,32,0,4)
C///
      IPUU=IAND(JTEXT(1),IMSK1)
      IPTH=IAND(ISHFT(JTEXT(1),8),IMSK2)
      WRITE(LTEXT(1:4),FMT='(A1,A1,A2)')IPUU,IDECP,IPTH
      MCHAR=4
      IF(INTG.GT.25) MCHAR=3
      CALL PUTLAB(ICAL1,ICAL,PUTHGT,LTEXT,PUTANG,MCHAR,JPRPUT,ITAPUT)
      GO TO 125
C
C     FORMAT STRIP LABEL FROM CENTER POSITION
C
 123  CONTINUE
      IF(NCHAR.EQ.9) NCHAR=3
C*    CALL BIN2EB(INTG,JTEXT,NCHAR,LPLMI)
      CALL BIN2EB(INTG,MTEXT,NCHAR,LPLMI)
C     PRINT *,' CLOSED: INTG=',INTG,' NCH=',NCHAR,' MTEXT=',MTEXT
      N=12
C///  CALL GBYTES(MTEXT,JTEXT,0,32,0,4)
C///  WRITE(LTEXT,FMT=IFF)JTEXT(1)
      WRITE(LTEXT,FMT=IFF)MTEXT
C     PRINT *, ' IN CLOSED, IFF=', IFF
C     PRINT *, ' LTEXT=',LTEXT,' MTEXT=',MTEXT
      CALL PUTLAB(ICAL1,ICAL,PUTHGT,LTEXT,PUTANG,N,JPRPUT,ITAPUT)
 125  L=MM
      YD1=YD1+YD2
      YVAL=YVAL+YD1
 130  CONTINUE
 200  CONTINUE
 500  RETURN
      END
