      SUBROUTINE ECHBAR(XINCH,YINCH,IDDD,KNOTS,SHAFT,NORSET,CHDD,KROTPR)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                                       .
C SUBPROGRAM:    ECHBAR      PLOT A WIND: STAFF, BARBS, FLAGS
C   PRGMMR: KRISHNA KUMAR    ORG: W/NP12    DATE: 1999-07-01
C
C ABSTRACT:  TO PLOT A WIND WITH A STAFF AND BARBS AND FLAGS.
C   EACH CALL TO THIS ROUTINE PLOTS ONLY ONE COMPLETE WIND PLOT.
C   NHC WND BARB SUBROUTINE "ECHBAR"; MODIFIED TO OUTPUT ITS VECTORS
C   IN THE NMC RASTER-GRAPHICS FORMAT BY MEANS OF CALLING THE
C   VERSION OF ZPLOT() WHICH WRITES VECTORS ONTO TAPE55, AND BY
C   CALLING PUTLAB() FOR PLOTTING SYMBOLS AND TEXT, AND FOR ERASING
C   UNDER WIND FLAGS AND BARBS.  
C
C PROGRAM HISTORY LOG:
C   74-11-??  ELBERT C. HILL---NHC, MIAMI, FLA.  NOVEMBER 1974
C   79-03-??  SHIMOMURA -- MODIFIED TO CALL ZPLOT AND PUTLAB; AND
C              ALSO TO RESTORE ORIENTATION TO NMC POLAR X/Y ORIENTATION
C   95-06-06  SHIMOMURA -- CONVERTING TO CRAY
C   95-11-09  SHIMOMURA -- CHANGED THE ERASER WITHIN-FONT INDEX
C              FROM NULLCHR TO "A"; TO WORK WITH NULL-TERMINATING 
C              STRINGS OF PUTLAB V.2
C 1999-07-01  KRISHNA KUMAR -- CONVERTED THIS CODE FROM CRAY TO IBM RS/6000.
C
C USAGE:   CALL ECHBAR(XINCH,YINCH,IDDD,KNOTS,SHAFT,NORSET,CHDD,KROTPR)
C                        1     2     3    4     5      6     7     8
C   INPUT ARGUMENT LIST:
C     INARG1   - GENERIC DESCRIPTION, INCLUDING CONTENT, UNITS,
C     INARG2   - TYPE.  EXPLAIN FUNCTION IF CONTROL VARIABLE.
C     (1),(2) XINCH,YINCH -- STATION LOCATION --
C                COORDINATES OF POINT (IN INCHES) ON VARIAN PLOTTER;
C                XINCH AND YINCH ARE COORDINATES OF THE WIND-STAFF HEAD
C
C     (3) IDDD  - WIND DIRECTION (IN DEGREES)
C     (4) KNOTS - WIND SPEED (IN KNOTS)
C     (5) SHAFT - SHAFT LENGTH (IN INCHES)
C                 ABSOLUTE VALUE OF VARIABLE "SHAFT" IS SHAFT-LENGTH 
C                 IN INCHES;
C               (.3125 INCHES IS STANDARD WEATHER BUREAU LENGTH)
C                IF "SHAFT" IS POSITIVE-VALUED, THEN WIND WILL BE 
C                   PLOTTED IN THE NORTHERN HEMISPHERE CONVENTION 
C                   (BARBS TO THE LEFT OF THE WIND FLOW);
C                IF "SHAFT" IS NEGATIVE-VALUED, THEN WIND WILL BE 
C                   PLOTTED IN THE SOUTHERN HEMISPHERE CONVENTION 
C                   (BARBS TO THE RIGHT OF THE WIND FLOW).
C
C     (6) NORSET - TO SET NORTH ORIENTATION -- "NORSET" DEFINES THE 
C                DIRECTION OF NORTH ON THE OUTPUT PLOT..
C                NORSET=0;   NORTH AT TOP OF OUTPUT PAPER WHEN YOU FACE 
C                            THE PLOTTER.
C                OTHERWISE,  "NORSET" IS NUMBER OF DEGREES YOU WISH TO 
C                            ROTATE NORTH FROM ABOVE ... ANY POSITIVE 
C                            OR NEGATIVE INTEGER FROM 1 THRU 359;
C                            FOR EXAMPLE..IF NORSET IS 90, THEN
C                            NORTH IS RIGHT SIDE OF PAPER WITH
C                            SOUTH-TO-NORTH RUNNING HORIZONTAL ACROSS 
C                            THE PAPER FROM LEFT-TO-RIGHT AS YOU FACE 
C                            THE PLOTTER.
C
C     (7) CHDD - C*4 --THE NORTH-ORIENTED WIND DIRECTION ROUNDED TO 
C                NEAREST 10 DEGREES IN TWO CHARACTERS LEFT-JUSTIFIED 
C                IN CHDD;
C                USED FOR PLOTTING WIND-DIRECTION DIGIT NEAR END OF 
C                SHAFT.
C
C     (8) KROTPR - THE ROTATION CODE FOR THE PRINTED WIND DIRECTION
C                DIGIT. CODE IN RANGE 0 THRU 3.  IF USER SETS
C                KROTPR=99, I WILL SKIP PRINTING OF WIND DIR DIGIT.
C
C   OUTPUT FILES:
C     FT55F001 - "TAPE55" IN LABEL-ARRAY FORMAT;
C                ECHBAR() CALLS ON ZPLOT() WHICH PUTS VECTORS INTO
C                LABEL-ARRAY FORMAT; AND ON PUTLAB() WHICH PUTS
C                SYMBOLS, TEXT, AND ERASERS INTO LABEL ARRAY FORMAT.
C
C
C REMARKS:
C   THE GIVEN X-,Y-COORDINATE VALUES ARE CONVERTED FROM INCHES TO
C   PIXELS, BY MULTIPLYING BY 100 PIXELS PER INCH.
C 
C   CAUTION:  I CHANGED ARG(7) FROM INTEGER IHDD TO CHARACTER*4 CHDD
C
C   CAUTION:  I CHANGED PUTLAB() CALL SEQUENCE 4TH ARG 
C                FROM INTEGER ITEXT CHARACTER CTEXT; AND
C             I CHANGED PUTLAB() CALL SEQUENCE 7TH ARG
C                FROM INTEGER*2 KPRIOR(2) TO INTEGER KPRIOR(2)
C                IN WHICH KPRIOR(1) IS ROTATION CODE
C                     AND KPRIOR(2) IS PLOT PRIORITY; 
C             WHEN I GET TO REPROGRAMMING PUTLAB, THEN I MUST BE
C             CONSISTENT.
C
C   CAUTION:  THIS ASSUMES THE WIND DIR DIGIT FONT IS (19);
C                   AND THE ERASER FONT IS (20);
C
C ATTRIBUTES:
C   LANGUAGE: F90
C   MACHINE:  IBM
C
C$$$
C
C      . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
C      ... The sequence of elements drawn is:
C      ... (1.) Eraser               -- set no. 20 
C      ... (2.) Wind direction digit -- set no. 19
C      ... (3.) Line for wind-shaft's shadow
C      ... (4.) Line for wind-shaft
C      ... (5.) Lines for triangular wind-flag
C      ... (6.) Lines for within-flag shading
C      ... (7.) Lines for 10-knot barbs
C      ... (8.) Line  for  5-knot barb
C      . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

       INTEGER    KWNDDIRDIG_FONT
       PARAMETER (KWNDDIRDIG_FONT=19)

       INTEGER    KERASER_FONT
       PARAMETER (KERASER_FONT=20)

C      . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
C USAGE:   CALL ECHBAR(XINCH,YINCH,IDDD,KNOTS,SHAFT,NORSET,CHDD,KROTPR)
C                        1     2     3    4     5      6     7     8
      REAL         XINCH,YINCH
      INTEGER      IDDD
      INTEGER      KNOTS
      REAL         SHAFT
      INTEGER      NORSET
      CHARACTER*4  CHDD
      INTEGER      KROTPR
C      . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

      COMMON   /XZPLAX/ XZPLOT, YZPLOT, IORITY
      REAL         XZPLOT
      REAL         YZPLOT
      INTEGER      IORITY

C     . . . . . . . . . . . . . . . .
C
      INTEGER  IPRIOR(2)
      INTEGER  KPRIOR(2)
C
      REAL     DIGDIS
      DATA     DIGDIS   / 0.10 /

      REAL     DIGDEL
      DATA     DIGDEL   / 0.04 /
C     ... WHERE DIGDEL IS USED TO POSITION TO LLCORNER OF WND DIR DIGIT


      REAL     DOTSIN
      DATA     DOTSIN   / 100.0 /

      REAL     CNVRAD
      DATA     CNVRAD   / 0.0174533 /


C     ... FOLLOWING ANGLE CONSTANTS ARE FOR SECTOR BOUNDS FOR SHADOW LN
      REAL     ANGK1
      DATA     ANGK1    / 0.46947 /
C     ... WHERE ANGK1 IS SINE OF 28 DEGREES (NEAR VERTICAL)
      REAL     ANGK2
      DATA     ANGK2    / 0.88295 /
C     ... WHERE ANGK2 IS SINE OF 62 DEGREES FOR NEAR HORIZONTAL
C
      CHARACTER*1  NULLCHR
C
      INTEGER  NT
      INTEGER  N5, N10, N50
      REAL     X,Y
C
      INTEGER  NSHINT,MAXNSH,NSHDLN
      REAL     ERASID,ENDERA,FLGSLK,HS2,YS4,YINC,YS2,DNS,DJY
C
      REAL     S_OLD
      DATA     S_OLD     / -99. /
C     ... WHERE S_OLD IS PREVIOUS (OLD) VALUE OF SHAFT LENGTH,
C     ...   WHICH IS USED AS A SWITCH TO TEST WHETHER A SET OF
C     ...   CONSTANTS NEEDS TO BE RE-COMPUTED FOR A NEW SHAFT-LENGTH
C     ...   OR NOT.   SO THIS DATA STATEMENT VALUE IS USED ONLY
C     ...   ON FIRST CALL, AND IS OVERWRITTEN BY THE CURRENT 
C     ...   SHAFT-LENGTH.
C     ...   
C     ...   DOES IT WORK???
C
      CHARACTER*1  C1ERASER
      DATA         C1ERASER   / 'A' /
C
      SAVE     NSHINT,MAXNSH,NSHDLN
      SAVE     ERASID,ENDERA,FLGSLK,HS2,YS4,YINC,YS2,DNS,DJY,S_OLD
C
C     . . . . .   S T A R T   . . . . . . . . . . . . . . . . . . . 
C
      NULLCHR = CHAR(0)
C
      N5 = 0
      N10 = 0
      N50 = 0
      NT = 0
C     ----------------------------------------------------
C     . . . . . . CHECKOUT PRINT . . . . . . . . . .
C     WRITE(6,105)XINCH,YINCH,IDDD,KNOTS,SHAFT,NORSET,CHDD(1:4),KROTPR,
C    1            S_OLD
  105 FORMAT(1H ,/1H ,'ECHBAR: CALLED W/ X,Y=(',F9.3,',',F9.3,')',
     1           '  IDDD=',I5,'; KNOTS=',I5,
     2      /1H ,'>  SHAFT=',F9.4,';  NORSET=',I6,';  CHDD="',A4,'"',
     3           '  KROTPR=',I6,
     4      /1h ,'>  Value saved in S_OLD = ',F9.4)
C     ----------------------------------------------------
      X = XINCH
      Y = YINCH
      IF(KNOTS .EQ. 0) GO TO 800
      IF((IDDD .GT. 360) .OR. (KNOTS .LT. 0)) GO TO 999
      IDDD = IDDD + NORSET
      IF(IDDD .GT. 360) THEN
        IDDD = IDDD - 360
      ENDIF
      IF(IDDD .LE. 0) THEN
        IDDD = IDDD + 360
      ENDIF
C     ... TO FIND AN INCREMENT BY WHICH TO MOVE ALONG THE SHAFT
C     ...   FOR POSITIONING SUCCESSIVE ERASER-SQUARE CHARACTERS
      IANG = IDDD
      IF(IANG .GT. 180) IANG=360-IANG
      IF(IANG .GT.  90) IANG=180-IANG
      IF(IANG .GT.  45) IANG= 90-IANG
C     ... NOW ANGLE HAS BEEN FOLDED INTO RANGE OF 0 TO 45 DEGREES
      RANG = FLOAT(IANG) * CNVRAD
      ERAMPY = COS(RANG)
      S = SHAFT
      IF(S .LT. 0.) S = -S
      IF(S .NE. S_OLD) THEN
        S_OLD = S
C       ... S_OLD WILL BE SAVED TO BE USED ON THE NEXT TIME ECHBAR
C       ... IS CALLED AS THE PREVIOUS (OLD) VALUE OF SHAFT LENGTH
C       ... ONLY FOR THE PURPOSE OF TRYING TO SKIP RE-INITIALIZING
C       ... THIS PARAGRAPH'S CONSTANTS.
C       ... ISN'T S_OLD A CONSTANT ????  NO, IT IS NOT A CONSTANT.
C       ... S_OLD ISN'T REFERENCED AFTER THIS LINE.  IT IS USED
C       ... ON THE NEXT CALL, IF THE CHANGED VALUE CAN BE SAVED.
C
        DJY  = S/20.
        DNS  = (3.*S)/20.
        YS2  = S/4.
        YINC = S/5.
        YS4  = S/8.
        HS2  = .866025*(S/2.)
        NSHDLN = 5
        MAXNSH = ABS(YS2) / 0.01
C       ... WHERE MAX NO. OF SHADE LINES WITHIN A FLAG IS
C       ...   LIMITED TO A DENSITY OF 0.01 INCH ...
        IF(NSHDLN .GT. MAXNSH) NSHDLN = MAXNSH
        NSHINT = NSHDLN + 1
        FLGSLK = YS2 / FLOAT(NSHINT)
C       ... WHERE FLGSLK IS FLAG SLICE THICKNESS FOR ONE SHADE
C       ...   INCREMENT ALONG THE SHAFT
        ENDERA = 0.6 * S
        ERASID = 0.30
C       ... WHERE ERASID IS LENGTH OF ONE SIDE OF ERASER SQUARE
      ENDIF
C
      XS2 = HS2
      IF(SHAFT .LT. 0.) XS2 = -XS2
      XS4 = XS2/2.
C
      SL = S
      IF(KNOTS .GT. 300) GO TO 999

      IF(KNOTS .LT. 3) GO TO 150
        NT  = (KNOTS+2)/5
        N50 = NT/10
        N10 = (NT-10*N50)/2
        N5  = NT - 10*N50 - 2*N10
        IF(KNOTS .LT. 38) GO TO 150
        IF((N50 .EQ. 1) .AND.
     1     (N10 .EQ. 0)) GO TO 150
          XST = .2*SL
          IF(N5 .EQ. 0) XST=.4*SL
          XST=XST+YINC*FLOAT(N10+N5) + (YS2+DJY)*FLOAT(N50)
          IF(N50 .NE. 0) XST=XST+DNS
          IF(XST.GT.SL)SL=XST
  150 CONTINUE
      CC = .0174533 * FLOAT(360-IDDD)
      IF(CC .GE. 6.283185) CC=0.
      SS = SIN(CC)
      CC = COS(CC)
      ERAINC = ERAMPY * ERASID
C     ... INSERT SOME ERASER CHARACTERS HERE FOR ERASING UNDER WIND
      HGT = FLOAT(KERASER_FONT)
      ANGLE = 0.0
      NCHAR = 1
      IPRIOR(1) = 0
      IPRIOR(2) = 0
      ITAG = 0
      SHAFLEN = SL

      IF(N50 .NE. 0) THEN
        SHAFLEN = SHAFLEN - (YS2 / 2.0)
      ENDIF

      SHADLN = XS2
      SHADLN = SHADLN / 2.0

  200 CONTINUE
      X1 = X - SHAFLEN*SS
      Y1 = Y + SHAFLEN*CC
      X2 = X1 + SHADLN*CC
      Y2 = Y1 + SHADLN*SS
C     ... WHERE X2,Y2  IS NEAR CENTER OF LAST FLAG OR BARB
      X3 = X2 - (ERASID/2.0)
      Y3 = Y2 - (ERASID / 2.0)
      IPT = NINT(X3*DOTSIN)
      JPT = NINT(Y3*DOTSIN)

      CALL PUTLAB(IPT,JPT,HGT,C1ERASER,ANGLE,NCHAR,IPRIOR,ITAG)
C
      SHAFLEN = SHAFLEN - ERAINC
      IF(SHAFLEN .GT. ENDERA) GO TO 200
C     ... OTHERWISE, WE HAVE ENOUGH ERASERS ALREADY
      IF(KROTPR .LT. 99) THEN
C       ... INSERT WIND DIRECTION DIGIT HERE ...
        HGT = FLOAT(KWNDDIRDIG_FONT)
        ANGLE = 0.0
        NCHAR = 1
        IPRIOR(1) = 0
        IPRIOR(2) = 2
        ITAG = 0
        SHAFLEN = SL
        SHADLN = DIGDIS
        SHADLN = SIGN(SHADLN,XS2)
        SHADLN = -SHADLN
C       ... WHICH WILL HAVE OPPOSITE SIGN TO THAT ON XS2,
C       ...   TO THROW IT ON THE OPPOSITE SIDE OF SHAFT.
        X1 = X - SHAFLEN*SS
        Y1 = Y + SHAFLEN*CC
        X2 = X1 + SHADLN*CC
        Y2 = Y1 + SHADLN*SS
C       ... WHERE X2,Y2 IS CENTER OF DIRECTION DIGIT NR END OF SHAFT
        X3 = X2 - DIGDEL
        Y3 = Y2 - DIGDEL
        IPT = NINT(X3*DOTSIN)
        JPT = NINT(Y3*DOTSIN)
        KPRIOR(1) = KROTPR
        KPRIOR(2) = IPRIOR(2)
        CALL PUTLAB(IPT,JPT,HGT,CHDD(2:2),ANGLE,NCHAR,KPRIOR,ITAG)
C
      ENDIF
C
C     . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
C     ... GET READY TO DRAW LINES VIA ZPLOT ...  

      XZPLOT = 1.0
      YZPLOT = 1.0
      IORITY = 2

      X2 = X - SL*SS
      Y2 = Y + SL*CC
C     ... WHICH ARE COORDS OF END OF SHAFT
C     ... INSERT A SHADOW LINE OF THE SHAFT HERE ...
      IF(ABS(SS) .LT. ANGK1) THEN
C       ... COMES HERE IF SHAFT IS NEAR VERTICAL
        DELX = -0.01
        IF(CC .LT. 0.0) DELX = +0.01
        DELY = 0.0

      ELSE IF(ABS(SS) .GT. ANGK2) THEN
C       ... COMES HERE IF SHAFT IS NEAR HORIZ.
        DELX = 0.0
        DELY = -0.01
        IF(SS .LT. 0.0) DELY = +0.01

      ELSE IF((SS*CC) .LT. 0.0) THEN
C       ... COMES HERE IF SHAFT IS SLANTED TO RIGHT
        IF(SS .LT. 0.0) THEN
          DELX = -0.01
          DELY = +0.01

        ELSE
          DELX = +0.01
          DELY = -0.01
        ENDIF

      ELSE
C       ... OTHERWISE, SHAFT IS SLANTED TO LEFT
        IF(SS .LT. 0.0) THEN
          DELX = +0.01
          DELY = +0.01

        ELSE
          DELX = -0.01
          DELY = -0.01

        ENDIF
      ENDIF
C
C     . . . .  COMES HERE WITH SHADOW LINE'S DELX AND DELY SET 
C
      X1M = X + DELX
      Y1M = Y + DELY
      CALL ZPLOT(X1M, Y1M, 3)

      X2M = X2 + DELX
      Y2M = Y2 + DELY
      CALL ZPLOT(X2M, Y2M, 2)
C     ... WHICH PUT IN THE SHADOW LINE OF SHAFT.
C
      CALL ZPLOT(X, Y, 3)
      CALL ZPLOT(X2, Y2, 2)

      IF(KNOTS .LT. 3) GO TO 800

      IF((N50 .NE. 0) .OR. (N10 .NE. 0)) GO TO 300
        XX = 0.
        YY = SL - YINC

        CALL ZPLOT(X-YY*SS,Y+YY*CC,3)

        XX = XS4
        YY = YY + YS4

        CALL ZPLOT(X+XX*CC-YY*SS,Y+XX*SS+YY*CC,2)

        GO TO 999

  300 CONTINUE
      IF(N50 .EQ. 0) GO TO 350
      YY = SL
      FLGDCR = XS2 / FLOAT(NSHINT)
C     ... WHERE FLGDCR IS FLAG SHADE LINE-SHORTENING INCREMENT
      DO 344 I=1,N50
        SVSHL1 = YY
        XX = XS2

        CALL ZPLOT(X+XX*CC-YY*SS,Y+XX*SS+YY*CC,2)
C       ... DRAWS PEN-DOWN TO POINT2 AT POINTY POINT
        XX = 0.
        YY = YY - YS2

        CALL ZPLOT(X-YY*SS,Y+YY*CC,2)
C       ... DRAWS PEN-DOWN TO POINT 3, ON THE SHAFT CLOSER TO ORIGIN
        YY = YY - DJY
        IF(I .EQ. N50) YY=YY-DNS
C     ... WHICH COMPUTES SHAFT LENGTH FOR NEXT ITEM DOWN THE SHAFT ...
        SVSHL2 = YY
C       ... NEXT COMES THE FLAG-SHADING LOGIC ...
        SHL2B = SVSHL2 + 0.01
        SHAFLEN = SVSHL1
        SHADLN = XS2
        DO  322  ISHADE = 1,NSHDLN
          SHAFLEN = SHAFLEN - FLGSLK
          IF(SHAFLEN .LE. SHL2B) GO TO 330
          X1 = X - SHAFLEN*SS
          Y1 = Y + SHAFLEN*CC
C
          CALL ZPLOT(X1,Y1,3)
C         ... WHICH POSITIONED THE PEN (PEN-UP) ON THE SHAFT ONE SHADE
C         ...   INCREMENT CLOSER TO THE ORIGIN WITHIN THE FLAG
          SHADLN = SHADLN - FLGDCR
          X2 = X1 + SHADLN*CC
          Y2 = Y1 + SHADLN*SS
C
          CALL ZPLOT(X2,Y2,2)
C         ... WHICH DRAWS A SHADE LINE W/I THE FLAG PERPENDICULAR
C         ...   TO THE SHAFT OUT TO THE SLOPING FACE OF FLAG
  322   CONTINUE
C       ... WHERE 322 IS ENDDO ON ISHADE=1,NSHDLN  . . . . . . . . . .

  330   CONTINUE
        YY = SVSHL2
 
        CALL ZPLOT(X-YY*SS,Y+YY*CC,3)

  344 CONTINUE
C     ... WHERE 344 IS ENDDO ON I=1,N50  . . . . . . . . . . . . . . . 
      SL=YY

  350 CONTINUE
      IF(N10 .NE. 0) THEN
        YY=SL
        DO  I = 1,N10
          XX = XS2
          YY = YY + YS2

          CALL ZPLOT(X+XX*CC-YY*SS,Y+XX*SS+YY*CC,2)

          XX = 0.
          YY = YY - YS2 - YINC

          CALL ZPLOT(X-YY*SS,Y+YY*CC,3)

        ENDDO
        SL=YY
      ENDIF

      IF(N5 .EQ. 0) GO TO 999
        XX = XS4
        YY = SL + YS4

        CALL ZPLOT(X+XX*CC-YY*SS, Y+XX*SS+YY*CC, 2)
        GO TO 999

  800 CONTINUE
C     ... CALM WIND ... DO NOTHING
      GO TO 999

  999 CONTINUE
      RETURN
      END
