#!/bin/ksh
################################################################################
####  UNIX Script Documentation Block
#                      .                                             .
# Script name:         exglobal_enkf_update_fv3gfs.sh.ecf
# Script description:  Make global_enkf update
#
# Author:        Rahul Mahajan      Org: NCEP/EMC     Date: 2017-03-02
#
# Abstract: This script runs the global_enkf update
#
# $Id$
#
# Attributes:
#   Language: POSIX shell
#   Machine: WCOSS-Cray/Theia
#
################################################################################

# Set environment.
VERBOSE=${VERBOSE:-"YES"}
if [ $VERBOSE = "YES" ] ; then
   echo $(date) EXECUTING $0 $* >&2
   set -x
fi

# Directories.
pwd=$(pwd)
NWPROD=${NWPROD:-$pwd}
HOMEgsi=${HOMEgsi:-$NWPROD}
FIXgsi=${FIXgsi:-$HOMEgsi/fix}
DATA=${DATA:-$pwd/enkf_update.$$}
COMIN=${COMIN:-$pwd}
COMIN_GES_ENS=${COMIN_GES_ENS:-$COMIN}
COMOUT=${COMOUT:-$COMIN}
COMOUT_ANL_ENS=${COMOUT_ANL_ENS:-$COMOUT}

# Utilities
NCP=${NCP:-"/bin/cp -p"}
NLN=${NLN:-"/bin/ln -sf"}
ERRSCRIPT=${ERRSCRIPT:-'eval [[ $err = 0 ]]'}
NEMSIOGET=${NEMSIOGET:-$NWPROD/utils/exec/nemsio_get}
USE_CFP=${USE_CFP:-"NO"}
APRUNCFP=${APRUNCFP:-""}
APRUN_ENKF=${APRUN_ENKF:-${APRUN:-""}}
NTHREADS_ENKF=${NTHREADS_ENKF:-${NTHREADS:-1}}

# Executables
ENKFEXEC=${ENKFEXEC:-$HOMEgsi/exec/global_enkf.x}

# Cycling and forecast hour specific parameters
CDATE=${CDATE:-"2001010100"}

# Filenames.
GPREFIX=${GPREFIX:-""}
GSUFFIX=${GSUFFIX:-""}
APREFIX=${APREFIX:-""}
ASUFFIX=${ASUFFIX:-""}

SMOOTH_ENKF=${SMOOTH_ENKF:-"YES"}

GBIASe=${GBIASe:-${APREFIX}abias_int.ensmean}
CNVSTAT=${CNVSTAT:-${APREFIX}cnvstat}
OZNSTAT=${OZNSTAT:-${APREFIX}oznstat}
RADSTAT=${RADSTAT:-${APREFIX}radstat}
ENKFSTAT=${ENKFSTAT:-${APREFIX}enkfstat}

# Namelist parameters
NMEM_ENKF=${NMEM_ENKF:-80}
NVARS_ENKF=${NVARS_ENKF:-5}
NAM_ENKF=${NAM_ENKF:-""}
SATOBS_ENKF=${SATOBS_ENKF:-""}
OZOBS_ENKF=${OZOBS_ENKF:-""}
imp_physics=${imp_physics:-"99"}
lupp=${lupp:-".true."}

################################################################################
ATMGES_ENSMEAN=$COMIN_GES_ENS/${GPREFIX}atmf006.ensmean${GSUFFIX}
LEVS_ENKF=${LEVS_ENKF:-$($NEMSIOGET $ATMGES_ENSMEAN dimz | awk '{print $2}')}
LATB_ENKF=${LATB_ENKF:-$($NEMSIOGET $ATMGES_ENSMEAN dimy | awk '{print $2}')}
LONB_ENKF=${LONB_ENKF:-$($NEMSIOGET $ATMGES_ENSMEAN dimx | awk '{print $2}')}
LATA_ENKF=${LATA_ENKF:-$LATB_ENKF}
LONA_ENKF=${LONA_ENKF:-$LONB_ENKF}

SATANGL=${SATANGL:-${FIXgsi}/global_satangbias.txt}
SATINFO=${SATINFO:-${FIXgsi}/global_satinfo.txt}
CONVINFO=${CONVINFO:-${FIXgsi}/global_convinfo.txt}
OZINFO=${OZINFO:-${FIXgsi}/global_ozinfo.txt}
SCANINFO=${SCANINFO:-${FIXgsi}/global_scaninfo.txt}
HYBENSINFO=${HYBENSINFO:-${FIXgsi}/global_hybens_info.l${LEVS_ENKF}.txt}

ENKF_SUFFIX="s"
[[ $SMOOTH_ENKF = "NO" ]] && ENKF_SUFFIX=""

################################################################################
# Preprocessing
mkdata=NO
if [ ! -d $DATA ]; then
   mkdata=YES
   mkdir -p $DATA
fi
cd $DATA || exit 99

################################################################################
# Clean up the run directory
rm convinfo satinfo ozinfo hybens_info
rm satbias_angle satbias_in
rm enkf.nml
rm sanl*

################################################################################
# Fixed files
$NLN $SATANGL    satbias_angle
$NLN $SATINFO    satinfo
$NLN $SCANINFO   scaninfo
$NLN $CONVINFO   convinfo
$NLN $OZINFO     ozinfo
$NLN $HYBENSINFO hybens_info

# Bias correction coefficients based on the ensemble mean
$NLN $COMOUT_ANL_ENS/$GBIASe satbias_in

################################################################################

if [ $USE_CFP = "YES" ]; then
   rm $DATA/untar.sh $DATA/mp_untar.sh
   set +x
   cat > $DATA/untar.sh << EOFuntar
#!/bin/sh
memchar=\$1
flist="$CNVSTAT"
for ftype in \$flist; do
   if [ \$memchar = "ensmean" ]; then
      fname=$COMOUT_ANL_ENS/\${ftype}.ensmean
   else
      fname=$COMOUT_ANL_ENS/\$memchar/\$ftype
   fi
   tar -xvf \$fname
done
EOFuntar
   set -x
   chmod 755 $DATA/untar.sh
fi

################################################################################
# Ensemble guess, observational data and analysis

flist="$CNVSTAT"
if [ $USE_CFP = "YES" ]; then
   echo "$DATA/untar.sh ensmean" | tee -a $DATA/mp_untar.sh
else
   for ftype in $flist; do
      fname=$COMOUT_ANL_ENS/${ftype}.ensmean
      tar -xvf $fname
   done
fi
for imem in $(seq 1 $NMEM_ENKF); do
   memchar="mem"$(printf %03i $imem)
   if [ $USE_CFP = "YES" ]; then
      echo "$DATA/untar.sh $memchar" | tee -a $DATA/mp_untar.sh
   else
      for ftype in $flist; do
         fname=$COMOUT_ANL_ENS/$memchar/$ftype
         tar -xvf $fname
      done
   fi
   $NLN $COMIN_GES_ENS/$memchar/${GPREFIX}atmf006${ENKF_SUFFIX}${GSUFFIX}  sfg_${CDATE}_fhr06_${memchar}
   $NLN $COMOUT_ANL_ENS/$memchar/${APREFIX}atmanl${ASUFFIX}               sanl_${CDATE}_fhr06_${memchar}
done

# Ensemble mean guess
$NLN $COMIN_GES_ENS/${GPREFIX}atmf006.ensmean${GSUFFIX} sfg_${CDATE}_fhr06_ensmean

if [ $USE_CFP = "YES" ]; then
   chmod 755 $DATA/mp_untar.sh
   ncmd=$(cat $DATA/mp_untar.sh | wc -l)
   if [ $ncmd -gt 0 ]; then
      ncmd_max=$((ncmd < npe_node_max ? ncmd : npe_node_max))
      APRUNCFP=$(eval echo $APRUNCFP)
      $APRUNCFP $DATA/mp_untar.sh
      rc=$?
      export ERR=$rc
      export err=$ERR
      $ERRSCRIPT || exit 2
   fi
fi

################################################################################
# Create global_enkf namelist
cat > enkf.nml << EOFnml
&nam_enkf
   datestring="$CDATE",datapath="$DATA/",
   analpertwtnh=0.85,analpertwtsh=0.85,analpertwttr=0.85,
   covinflatemax=1.e2,covinflatemin=1,pseudo_rh=.true.,iassim_order=0,
   corrlengthnh=2000,corrlengthsh=2000,corrlengthtr=2000,
   lnsigcutoffnh=2.0,lnsigcutoffsh=2.0,lnsigcutofftr=2.0,
   lnsigcutoffpsnh=2.0,lnsigcutoffpssh=2.0,lnsigcutoffpstr=2.0,
   lnsigcutoffsatnh=2.0,lnsigcutoffsatsh=2.0,lnsigcutoffsattr=2.0,
   obtimelnh=1.e30,obtimelsh=1.e30,obtimeltr=1.e30,
   saterrfact=1.0,numiter=1,
   sprd_tol=1.e30,paoverpb_thresh=0.98,
   nlons=$LONA_ENKF,nlats=$LATA_ENKF,nlevs=$LEVS_ENKF,nanals=$NMEM_ENKF,nvars=$NVARS_ENKF,
   deterministic=.true.,sortinc=.true.,lupd_satbiasc=.false.,
   reducedgrid=.true.,readin_localization=.true.,
   use_gfs_nemsio=.true.,imp_physics=$imp_physics,lupp=$lupp,
   univaroz=.false.,adp_anglebc=.true.,angord=4,use_edges=.false.,emiss_bc=.true.,
   $NAM_ENKF
/
&satobs_enkf
   $SATOBS_ENKF
/
&ozobs_enkf
   $OZOBS_ENKF
/
EOFnml

################################################################################
# Run enkf update
export OMP_NUM_THREADS=$NTHREADS_ENKF
$NCP $ENKFEXEC $DATA/enkf.x
$APRUN_ENKF $DATA/enkf.x < enkf.nml 1>stdout 2>stderr
rc=$?

export ERR=$rc
export err=$ERR
$ERRSCRIPT || exit 2

# Cat runtime output files.
cat stdout stderr > $COMOUT_ANL_ENS/$ENKFSTAT

################################################################################
#  Postprocessing
cd $pwd
[[ $mkdata = "YES" ]] && rm -rf $DATA
set +x
if [ $VERBOSE = "YES" ]; then
   echo $(date) EXITING $0 with return code $err >&2
fi
exit $err
